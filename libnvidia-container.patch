diff --git a/src/ldcache.c b/src/ldcache.c
index 38bab05..ba922d9 100644
--- a/src/ldcache.c
+++ b/src/ldcache.c
@@ -108,40 +108,28 @@ ldcache_close(struct ldcache *ctx)
 
 int
 ldcache_resolve(struct ldcache *ctx, uint32_t arch, const char *root, const char * const libs[],
-    char *paths[], size_t size, ldcache_select_fn select, void *select_ctx)
+		char *paths[], size_t size)
 {
-        char path[PATH_MAX];
-        struct header_libc6 *h;
-        int override;
-
-        h = (struct header_libc6 *)ctx->ptr;
-        memset(paths, 0, size * sizeof(*paths));
-
-        for (uint32_t i = 0; i < h->nlibs; ++i) {
-                int32_t flags = h->libs[i].flags;
-                char *key = (char *)ctx->ptr + h->libs[i].key;
-                char *value = (char *)ctx->ptr + h->libs[i].value;
-
-                if (!(flags & LD_ELF) || (flags & LD_ARCH_MASK) != arch)
-                        continue;
-
-                for (size_t j = 0; j < size; ++j) {
-                        if (!str_has_prefix(key, libs[j]))
-                                continue;
-                        if (path_resolve(ctx->err, path, root, value) < 0)
-                                return (-1);
-                        if (paths[j] != NULL && str_equal(paths[j], path))
-                                continue;
-                        if ((override = select(ctx->err, select_ctx, root, paths[j], path)) < 0)
-                                return (-1);
-                        if (override) {
-                                free(paths[j]);
-                                paths[j] = xstrdup(ctx->err, path);
-                                if (paths[j] == NULL)
-                                        return (-1);
-                        }
-                        break;
-                }
-        }
-        return (0);
+  char path[PATH_MAX];
+  char dir[PATH_MAX] = "/run/current-system/profile/lib"; // Is it neater to refer to the /gnu/store path?
+  char lib[PATH_MAX];
+
+  memset(paths, 0, size * sizeof(*paths));
+
+  for (size_t j = 0; j < size; ++j) {
+
+    if (!strncmp(libs[j], "libvdpau_nvidia.so", 100))
+      strcat(dir, "/vdpau");
+    snprintf(lib, 100, "%s/%s", dir, libs[j]);
+
+    if (path_resolve_full(ctx->err, path, "/", lib) < 0)
+      return (-1);
+    if (!file_exists(ctx->err, path))
+      continue;
+    paths[j] = xstrdup(ctx->err, path);
+    if (paths[j] == NULL)
+      return (-1);
+
+  }
+  return (0);
 }
diff --git a/src/ldcache.h b/src/ldcache.h
index 33d78dd..95b603e 100644
--- a/src/ldcache.h
+++ b/src/ldcache.h
@@ -50,6 +50,6 @@ void ldcache_init(struct ldcache *, struct error *, const char *);
 int  ldcache_open(struct ldcache *);
 int  ldcache_close(struct ldcache *);
 int  ldcache_resolve(struct ldcache *, uint32_t, const char *, const char * const [],
-    char *[], size_t, ldcache_select_fn, void *);
+    char *[], size_t);
 
 #endif /* HEADER_LDCACHE_H */
diff --git a/src/nvc_info.c b/src/nvc_info.c
index 85c9a4d..2464299 100644
--- a/src/nvc_info.c
+++ b/src/nvc_info.c
@@ -216,15 +216,15 @@ find_library_paths(struct error *err, struct dxcore_context *dxcore, struct nvc_
         if (path_resolve_full(err, path, root, ldcache) < 0)
                 return (-1);
         ldcache_init(&ld, err, path);
-        if (ldcache_open(&ld) < 0)
-                return (-1);
+        //if (ldcache_open(&ld) < 0)
+        //        return (-1);
 
         info->nlibs = size;
         info->libs = array_new(err, size);
         if (info->libs == NULL)
                 goto fail;
         if (ldcache_resolve(&ld, LIB_ARCH, root, libs,
-            info->libs, info->nlibs, select_libraries_fn, info) < 0)
+            info->libs, info->nlibs) < 0)
                 goto fail;
 
         info->nlibs32 = size;
@@ -232,13 +232,13 @@ find_library_paths(struct error *err, struct dxcore_context *dxcore, struct nvc_
         if (info->libs32 == NULL)
                 goto fail;
         if (ldcache_resolve(&ld, LIB32_ARCH, root, libs,
-            info->libs32, info->nlibs32, select_libraries_fn, info) < 0)
+            info->libs32, info->nlibs32) < 0)
                 goto fail;
         rv = 0;
 
  fail:
-        if (ldcache_close(&ld) < 0)
-                return (-1);
+        //if (ldcache_close(&ld) < 0)
+        //        return (-1);
         return (rv);
 }
 
